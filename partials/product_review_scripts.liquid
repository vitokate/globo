<script>
 function isTextClamped(elm) {
  return elm.scrollHeight > elm.clientHeight;
}

function buildReviewHtml(text, rating, customer, date) {
  const filledStars = '<span class="ph-fill ph-star checked"></span>'.repeat(rating);
  const emptyStars = '<span class="ph-fill ph-star"></span>'.repeat(5 - rating);

  const reviewText = $('<p class="product-review-text mb-1"></p>').text(text);
  const showMoreButton = $('<div class="expand-button">{% t "Show More" %}</div>');
  const showLessButton = $('<div class="expand-button" style="display:none">{% t "Show Less" %}</div>');

  function showMore() {
    reviewText.addClass('show-more');
    showMoreButton.hide();
    showLessButton.show();
  }

  function showLess() {
    reviewText.removeClass('show-more');
    showLessButton.hide();
    showMoreButton.show();
  }

  showMoreButton.click(showMore);
  showLessButton.click(showLess);

  const review = $('<div></div>');
  review.append(`
    <div class="product-rating stars">
      ${filledStars}
      ${emptyStars}
    </div>
  `);
  review.append(reviewText);
  review.append(showMoreButton);
  review.append(showLessButton);
  review.append(`<p class="author">${customer} {% t "at" %} ${date}</p>`);

  return review;
}

function updateShowMoreButtonsVisibility() {
  $('.product-review-text').each(function() {
    const reviewText = $(this);
    reviewText.removeClass('show-more');
    if (isTextClamped(reviewText[0])) {
      reviewText.nextAll('.expand-button:first').show(); // Enable show more button
      reviewText.nextAll('.expand-button:last').hide(); // Disable show less button
    } else {
      reviewText.nextAll('.expand-button').hide();
    }
  });
}

</script>
